#!/bin/sh
# load quotas

die()   {  echo "$@"; exit 1;  }
config=`dirname $0`/quotas.config
[ -f "$config" ] || die "quotas.config missing"
source "$config"

####################################################################################
# sanity checks

usage() {  die "usage: load_quotas file";  }
[ -f "$1" ] || usage

header="mac_address       quota   timestamp  name"
h=`head -1 "$1"`
[ "$h" = "$header" ] || die "invalid file"

# be safe, backup current quotas
`dirname $0`/save_quotas > /tmp/_quotas.backup || die "quota backup failed"

####################################################################################

echo "restoring mac quotas ..."
tail +2 "$1" > /tmp/offline_mac_counters

####################################################################################

parse_arp() {  grep $if_lan < /proc/net/arp | grep -vF 00:00:00:00:00:00 | sed -e 's/  */ /g' | cut -d' ' -f1,4 ;  }
list_arp()  {  tr ' ' '\n' ;  }

echo ""
echo "restoring ip quotas ..."
ipset flush IP_QUOTA 
parse_arp | list_arp | while read ip ; read mac; do
    quota=`grep -F $mac < "$1" | cut -d' ' -f2 `
    [ -z "$quota" ] && continue
    echo "  $ip -> $quota" 1&>2
    echo "add IP_QUOTA $ip packets 0 bytes $quota"
done | ipset restore 

