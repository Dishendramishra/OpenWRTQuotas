#!/bin/bash

RELEASE="$1"
TARGET="$2"
ARCH="$3"

die() {  echo "$@"; exit 1;  }
get() {  [ -f "$1" ] && return 0; 
         echo "get $2"
         if ! wget --quiet -O "$1" "$2"; then
	     rm "$1"; die "wget failed, aborting"
	 fi
      }

cd selfcontained
rm -rf tmp packages data ../src_extra
mkdir  tmp packages data 

base_url="http://downloads.openwrt.org/$RELEASE/packages/$ARCH/base"
kmod_url="http://downloads.openwrt.org/$RELEASE/targets/$TARGET/packages"

get_pkg_url()
{
    pkg="$1"

    filename=`cat kmod_filenames | grep "^$pkg " | cut -d' ' -f2`
    if [ -n "$filename" ]; then echo "$kmod_url/$filename"; return; fi

    filename=`cat base_filenames | grep "^$pkg " | cut -d' ' -f2`
    if [ -n "$filename" ]; then echo "$base_url/$filename"; return; fi

    die "Couldn't find package '$f', this is bad."    
}


get Packages.1 "$base_url/Packages"
./package_filenames < Packages.1 > base_filenames
get Packages.2 "$kmod_url/Packages"
./package_filenames < Packages.2 > kmod_filenames

cat deps | while read f; do
    url=`get_pkg_url "$f"`
    get packages/$f.ipk "$url"
    echo "extracting $f.ipk"
    cd tmp
    tar -xzf ../packages/$f.ipk
    cd ../data
    tar -xzf ../tmp/data.tar.gz
    cd ..
    rm tmp/*
done || exit 1

cd data
echo "packing needed files"
mkdir ../../src_extra
tar -cT ../needed_files -f - | (cd ../../src_extra; tar -xf -)
